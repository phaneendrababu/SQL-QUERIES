SELECT EMPLOYEE_ID,NVL(TO_CHAR(COMMISSION_PCT),'0000') 
"COMMISSION_PCT" FROM EMPLOYEES

SELECT EMPLOYEE_ID,NVL(TO_CHAR(COMMISSION_PCT),'NOT APPLICABLE') 
"COMMISSION_PCT" FROM EMPLOYEES

SELECT MANAGER_ID,COUNT(FIRST_NAME) AS LIST
FROM EMPLOYEES
GROUP BY MANAGER_ID ORDER BY MANAGER_ID

EQUI JOIN:
SELECT DEPARTMENT_NAME 
FROM DEPARTMENTS D, EMPLOYEES E 
WHERE D.DEPARTMENT_ID=E.DEPARTMENT_ID

FULL OUTER JOIN USING (+):
SELECT EMPLOYEE_ID,DEPARTMENT_NAME,D.DEPARTMENT_ID FROM DEPARTMENTS D,EMPLOYEES E WHERE E.DEPARTMENT_ID=D.DEPARTMENT_ID(+)
UNION
SELECT EMPLOYEE_ID,DEPARTMENT_NAME,D.DEPARTMENT_ID FROM DEPARTMENTS D,EMPLOYEES E WHERE E.DEPARTMENT_ID(+)=D.DEPARTMENT_ID 

/*SELECT EMPLOYEE_ID,D.DEPARTMENT_NAME,D.DEPARTMENT_ID FROM DEPARTMENTS D,EMPLOYEES E WHERE E.DEPARTMENT_ID=D.DEPARTMENT_ID(+)
UNION
SELECT EMPLOYEE_ID,D.DEPARTMENT_NAME,D.DEPARTMENT_ID FROM DEPARTMENTS D,EMPLOYEES E WHERE E.DEPARTMENT_ID(+)=D.DEPARTMENT_ID */

EMPLOYEE SALARY GREATER THAN THAT PARTICULAR DEPARTMENT:
SELECT EMPLOYEE_ID,FIRST_NAME,SALARY FROM EMPLOYEES A 
WHERE SALARY>(SELECT AVG(SALARY) FROM EMPLOYEES B WHERE A.DEPARTMENT_ID=B.DEPARTMENT_ID GROUP BY DEPARTMENT_ID)

NON-EQUI JOIN:
SELECT EMPLOYEE_ID,FIRST_NAME,SALARY
FROM EMPLOYEES
WHERE SALARY IN (SELECT SALARY FROM EMPLOYEES WHERE SALARY IN(10000,20000)) ORDER BY EMPLOYEE_ID

SELECT EMPLOYEE_ID,FIRST_NAME,SALARY
FROM EMPLOYEES
WHERE SALARY IN (SELECT SALARY FROM EMPLOYEES WHERE SALARY BETWEEN 10000 AND 20000) ORDER BY EMPLOYEE_ID


JOINS:
SELECT E.EMPLOYEE_ID,E.FIRST_NAME,D.DEPARTMENT_ID 
FROM EMPLOYEES E LEFT OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID=D.DEPARTMENT_ID

SELECT E.EMPLOYEE_ID,E.FIRST_NAME,D.DEPARTMENT_ID 
FROM EMPLOYEES E RIGHT OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID=D.DEPARTMENT_ID

SELECT E.EMPLOYEE_ID,E.FIRST_NAME,D.DEPARTMENT_ID 
FROM EMPLOYEES E FULL OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID=D.DEPARTMENT_ID


STARTS WITH B:
SELECT FIRST_NAME FROM EMPLOYEES WHERE FIRST_NAME LIKE 'B%'
SECOND CHARCTER IS A:
SELECT FIRST_NAME FROM EMPLOYEES WHERE FIRST_NAME LIKE '_a%'
ENDS WITH N:
SELECT FIRST_NAME FROM EMPLOYEES WHERE FIRST_NAME LIKE '%n'



SQL> DELETE FROM COURSE WHERE COURSE_ID=111;

1 row deleted.

SQL> SELECT * FROM COURSE;

 COURSE_ID COURSE_NAME          COURSE_FEE
---------- -------------------- ----------
       101 ORACLE                    20000
       102 JAVA                      25000
       103 PYTHON                    50000
       104 COBOL                     10000
       105 C++                       15000
       106 C#                        18000
       107 RUBY                      45000
       108 DS                        30000
       109 OS                        24000
       110 SAP                       60000

10 rows selected.

SQL> ROLLBACK;

Rollback complete.

SQL> SELECT * FROM COURSE;

 COURSE_ID COURSE_NAME          COURSE_FEE
---------- -------------------- ----------
       101 ORACLE                    20000
       102 JAVA                      25000
       103 PYTHON                    50000
       104 COBOL                     10000
       105 C++                       15000
       106 C#                        18000
       107 RUBY                      45000
       108 DS                        30000
       109 OS                        24000
       110 SAP                       60000
       111 SCALA                     50000

11 rows selected.

SQL> UPDATE COURSE SET COURSE_FEE=10000;

11 rows updated.

SQL> SELECT * FROM COURSE;

 COURSE_ID COURSE_NAME          COURSE_FEE
---------- -------------------- ----------
       101 ORACLE                    10000
       102 JAVA                      10000
       103 PYTHON                    10000
       104 COBOL                     10000
       105 C++                       10000
       106 C#                        10000
       107 RUBY                      10000
       108 DS                        10000
       109 OS                        10000
       110 SAP                       10000
       111 SCALA                     10000

11 rows selected.

SQL> ROLLBACK;

Rollback complete.

SQL> SELECT * FROM COURSE;

 COURSE_ID COURSE_NAME          COURSE_FEE
---------- -------------------- ----------
       101 ORACLE                    20000
       102 JAVA                      25000
       103 PYTHON                    50000
       104 COBOL                     10000
       105 C++                       15000
       106 C#                        18000
       107 RUBY                      45000
       108 DS                        30000
       109 OS                        24000
       110 SAP                       60000
       111 SCALA                     50000

11 rows selected.

SQL> INSERT INTO COURSE VALUES(&a,'&b',&c);
Enter value for a: 111
Enter value for b: SCALA
Enter value for c: 50000
old   1: INSERT INTO COURSE VALUES(&a,'&b',&c)
new   1: INSERT INTO COURSE VALUES(111,'SCALA',50000)

1 row created.

